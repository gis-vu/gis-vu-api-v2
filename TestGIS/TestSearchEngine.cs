using System;
using DTOs;
using LoadGIS;
using Models;
using Newtonsoft.Json;
using SearchGIS;
using Xunit;

namespace TestGIS
{
    public class TestSearchEngine
    {
        [Fact]
        public void AssertTrue()
        {
            //Assert.True(true);

            var searchEngine = new SearchEngine(new Loader(".\\TestData\\grid.txt", ".\\TestData\\"));

            var route = searchEngine.FindRoute(new RouteSearchRequestDTO()
            {
                Start = new CoordinateDTO()
                {
                    Lng = 22.878339403559522,
                    Lat = 54.848828627719826
                },
                End = new CoordinateDTO()
                {
                    Lng = 22.928548572356505,
                    Lat = 54.8384118522867
                },
                Points = Array.Empty<CoordinateDTO>()
            });


            var first = JsonConvert.SerializeObject(route);
            var second = JsonConvert.DeserializeObject(
                "{\"routes\":[{\"info\":{\"length\":0.0},\"data\":{\"type\":\"LineString\",\"coordinates\":[[22.874644913496294,54.847397081289721],[22.87409600000003,54.8488137],[22.871065400000006,54.85663390000002],[22.870045399999992,54.859321299999984],[22.870045399999992,54.859321299999984],[22.868767799999993,54.862687200000018],[22.868767799999993,54.862687200000018],[22.886008100000037,54.868355200000025],[22.886889100000019,54.868629800000022],[22.88829330000004,54.868909699999996],[22.890339999999977,54.8693005],[22.890908999999994,54.869469500000065],[22.891450500000033,54.869691400000029],[22.892031000000028,54.869973800000039],[22.892031000000028,54.869973800000039],[22.892374099999998,54.869850899999989],[22.894714900000064,54.869465100000021],[22.895490299999977,54.869322400000044],[22.895772200000053,54.86926059999999],[22.89597539999998,54.869171000000073],[22.896159800000063,54.869050900000047],[22.896211200000032,54.868984599999969],[22.896211200000032,54.868984599999969],[22.896281399999975,54.868892499999973],[22.896281399999975,54.868892499999973],[22.8963193,54.86884450000003],[22.896335899999954,54.868823599999985],[22.896689199999969,54.868163299999985],[22.897417700000027,54.866701299999974],[22.898528700000032,54.863468300000008],[22.898528700000032,54.863468300000008],[22.904533999999963,54.864474400000006],[22.906373999999992,54.86469680000004],[22.906534899999954,54.864616500000032],[22.906770999999971,54.864104],[22.906953399999949,54.864029899999984],[22.911458100000008,54.86468319999998],[22.9133432,54.865034800000025],[22.9133432,54.865034800000025],[22.913836200000038,54.865169599999987],[22.917496400000012,54.86578660000005],[22.918260499999992,54.865878800000061],[22.919653200000045,54.866155400000004],[22.9221303,54.866602300000054],[22.922339799999992,54.866559699999975],[22.923917299999982,54.866112900000047],[22.924267500000006,54.865949600000029],[22.924267500000006,54.865949600000029],[22.924021399999976,54.865746099999981],[22.923895300000005,54.865699899999981],[22.923685000000031,54.8657256],[22.923369500000035,54.865768900000027],[22.923291000000017,54.865302499999977],[22.9230887,54.86456219999998],[22.923113900000029,54.864399400000011],[22.922584499999996,54.862715499999965],[22.922294800000021,54.861821599999978],[22.922294800000021,54.861821599999978],[22.922230600000034,54.861623600000044],[22.922188099999985,54.861053300000016],[22.922131499999992,54.8608985],[22.922117299999989,54.860018500000017],[22.922040999999986,54.859189900000054],[22.922018200000046,54.85894290000001],[22.922003599999975,54.858883200000051],[22.921706800000031,54.857671700000012],[22.921692600000032,54.8575087],[22.922683600000031,54.856384200000036],[22.922810999999996,54.856172300000004],[22.922856599999967,54.855716599999958],[22.9228354,54.855390499999992],[22.92226910000003,54.852892200000028],[22.922247299999974,54.852697900000045],[22.922334399999986,54.852431400000043],[22.923298199999984,54.850870299999983],[22.923683800000024,54.850239899999984],[22.923683800000024,54.850239899999984],[22.924561299999954,54.848805400000032],[22.927169400000025,54.84448],[22.927169400000025,54.84448],[22.928358199999973,54.84250819999999],[22.928686599999967,54.842142600000024],[22.928686599999967,54.842142600000024],[22.928888599999961,54.8419511],[22.930832800000012,54.840240799999982],[22.931280700000023,54.839853199999986],[22.931744700000049,54.83945],[22.93177189999998,54.839434300000043],[22.931864500000028,54.839380899999973],[22.931864500000028,54.839380899999973],[22.93139409999997,54.838793600000045],[22.930826099999994,54.837978700000036],[22.930826099999994,54.837978700000036],[22.93069729999997,54.838007999999988],[22.930278900000012,54.838108400000031],[22.929882000000028,54.838222699999974],[22.929467500000019,54.838280700000006],[22.929467500000019,54.838280700000006],[22.928719200000003,54.838364100000035],[22.928545478632355,54.838382264380925]]}}]}");

            var secondAsText = JsonConvert.SerializeObject(second);

            Assert.True(secondAsText.ToLower() == first.ToLower());
        }
    }
}
